{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanc\\\\reactProjects\\\\NLU test\\\\flavor-app\\\\frontEnd\\\\src\\\\components\\\\GetQuote.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GetQuote = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    capability: \"\",\n    message: \"\",\n    updates: false\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(formData);\n    try {\n      const {\n        name,\n        email,\n        capability,\n        message,\n        updates\n      } = formData;\n      const quote = {\n        name,\n        email,\n        capability,\n        message,\n        updates\n      };\n      const response = await fetch('http://localhost:4000/api/quote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(quote)\n      });\n      setFormData({\n        name: \"\",\n        email: \"\",\n        capability: \"\",\n        message: \"\",\n        updates: false\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (e.target.type === 'select-one') {\n      const selectedOption = e.target.options[e.target.selectedIndex];\n      setFormData({\n        ...formData,\n        [name]: selectedOption.value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n    ;\n  };\n  const handleCheckboxChange = () => {\n    // Toggle the 'updates' property when the checkbox is clicked\n    setFormData({\n      ...formData,\n      updates: !formData.updates // Toggle the value (true to false or false to true)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"getQuote\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formContainer\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"formHeader\",\n        children: \"Get a Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"formInput\",\n        placeholder: \"Name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"formInput\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"formDropdown\",\n        name: \"capability\",\n        value: formData.capability,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a capability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Design\",\n          children: \"Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Production\",\n          children: \"Production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Certification\",\n          children: \"Certification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"formTextarea\",\n        placeholder: \"Message\",\n        name: \"message\",\n        value: formData.message,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"formCheckbox\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Would you like to receive email updates?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"formCheckbox\",\n        checked: formData.updates,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"formButton\",\n        children: \"Get a Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GetQuote, \"flgzTPp2mQ3rCt2+oltHUvZVjyY=\");\n_c = GetQuote;\nvar _c;\n$RefreshReg$(_c, \"GetQuote\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GetQuote","_s","formData","setFormData","name","email","capability","message","updates","handleSubmit","e","preventDefault","console","log","quote","response","fetch","method","headers","body","JSON","stringify","err","handleInputChange","value","target","type","selectedOption","options","selectedIndex","handleCheckboxChange","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","disabled","htmlFor","style","marginRight","checked","_c","$RefreshReg$"],"sources":["C:/Users/ryanc/reactProjects/NLU test/flavor-app/frontEnd/src/components/GetQuote.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport const GetQuote = () => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    capability: \"\",\r\n    message: \"\",\r\n    updates: false\r\n  })\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(formData)\r\n    try {\r\n      const { name, email, capability, message, updates } = formData;\r\n      const quote = { name, email, capability, message, updates };\r\n      const response = await fetch('http://localhost:4000/api/quote', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(quote),\r\n      });\r\n      setFormData({\r\n        name: \"\",\r\n        email: \"\",\r\n        capability: \"\",\r\n        message: \"\",\r\n        updates: false\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n    \r\n      const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (e.target.type === 'select-one') {\r\n          const selectedOption = e.target.options[e.target.selectedIndex];\r\n          setFormData({\r\n            ...formData,\r\n            [name]: selectedOption.value,\r\n          });\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        };\r\n      };\r\n\r\n      const handleCheckboxChange = () => {\r\n        // Toggle the 'updates' property when the checkbox is clicked\r\n        setFormData({\r\n          ...formData,\r\n          updates: !formData.updates, // Toggle the value (true to false or false to true)\r\n        });\r\n      };\r\n\r\n  return (\r\n    <div className=\"getQuote\">\r\n    <form className=\"formContainer\" onSubmit={handleSubmit}>\r\n      <h1 className=\"formHeader\">Get a Quote</h1>\r\n      <input \r\n        type=\"text\" \r\n        className=\"formInput\" \r\n        placeholder=\"Name\"\r\n        name='name'\r\n        value={formData.name}\r\n        onChange={handleInputChange}/>\r\n      <input \r\n        type=\"email\" \r\n        className=\"formInput\" \r\n        name='email'\r\n        placeholder=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleInputChange}/>\r\n      <select \r\n        className=\"formDropdown\"\r\n        name=\"capability\"\r\n        value={formData.capability}\r\n        onChange={handleInputChange}\r\n      >\r\n        <option value={\"\"} disabled>Select a capability</option>\r\n        <option value=\"Design\">Design</option>\r\n        <option value=\"Production\">Production</option>\r\n        <option value=\"Certification\">Certification</option>\r\n      </select>\r\n      <textarea \r\n        className=\"formTextarea\" \r\n        placeholder=\"Message\"\r\n        name='message'\r\n        value={formData.message}\r\n        onChange={handleInputChange}>\r\n      </textarea>\r\n      <label htmlFor=\"formCheckbox\" style={{ marginRight: \"10px\"}}>Would you like to receive email updates?</label>\r\n      <input \r\n        type=\"checkbox\"  \r\n        name=\"formCheckbox\"\r\n        checked={formData.updates}\r\n        onChange={handleCheckboxChange}/>\r\n      <button className=\"formButton\">Get a Quote</button>\r\n    </form>\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}