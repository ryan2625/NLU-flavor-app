{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanc\\\\reactProjects\\\\personalProjects\\\\NLU FLAVOR APP\\\\flavor-app\\\\frontEnd\\\\src\\\\components\\\\flavorCategoryFiles\\\\FlavorsCategory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GetQuote } from '../GetQuote';\nimport '../../styles/flavorsCategory.css';\nimport food1 from './food_1.avif';\nimport food2 from './food_2.avif';\nimport food3 from './food_3.avif';\n\n/**\r\n * FlavorsCategory Component\r\n *\r\n * This component represents the flavorsCategory page that dynamically retrieves\r\n * all different categories from the database. It also provides a random picture for each category.\r\n * \r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FlavorsCategory = () => {\n  _s();\n  let categoryLink;\n  let foodImages = [food1, food2, food3];\n\n  /*Picks one of the three images I included in the files at random. May not match up with the right category but it's just a placeholder*/\n\n  function getRandomPicture() {\n    let index = Math.floor(Math.random() * foodImages.length);\n    return index;\n  }\n  const [categories, setCategories] = useState(null);\n\n  /**\r\n   * \r\n   * This useEffect hook makes a GET request to the backend at the path /flavors/Categories. It then sets the categoriesArray \r\n   * to be rendered by the component. Note: The web app only makes GET requests and the database will not be receiving anymore\r\n   * flavor or flavor category data. This is why this useEffect hook and others have an empty dependency array.\r\n   * \r\n   */\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/flavors/Categories');\n        if (response.ok) {\n          const categoriesArray = await response.json();\n          setCategories(categoriesArray);\n        } else {\n          console.log(`Failed to fetch categories. Status: ${response.status}`);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  /**\r\n  * This useEffect hook scrolls the page to the top of the page when the component mounts. this ensures the user does not enter into a route with the page scrolled down.\r\n  * \r\n  *   Uses set timeout to prevent unexpected behavior    *  with the render ordering.\r\n  */\n\n  useEffect(() => {\n    setTimeout(function () {\n      window.scrollTo(0, 0);\n    }, 150);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayCategoryContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flavorsCategory\",\n        children: categories && categories.map(category => {\n          categoryLink = `/flavors/${category}`;\n          let containerStyle = {\n            backgroundImage: `url(${foodImages[getRandomPicture()]})`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat'\n          };\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: categoryLink,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"categoryItem\",\n              style: containerStyle,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteBox\",\n        id: \"categoryQuote\",\n        children: /*#__PURE__*/_jsxDEV(GetQuote, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FlavorsCategory, \"n+9lop5BLjRMJZtGjDlFOk7OF+U=\");\n_c = FlavorsCategory;\nvar _c;\n$RefreshReg$(_c, \"FlavorsCategory\");","map":{"version":3,"names":["React","useEffect","useState","Link","GetQuote","food1","food2","food3","jsxDEV","_jsxDEV","Fragment","_Fragment","FlavorsCategory","_s","categoryLink","foodImages","getRandomPicture","index","Math","floor","random","length","categories","setCategories","fetchCategories","response","fetch","ok","categoriesArray","json","console","log","status","error","setTimeout","window","scrollTo","children","className","map","category","containerStyle","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","to","style","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/ryanc/reactProjects/personalProjects/NLU FLAVOR APP/flavor-app/frontEnd/src/components/flavorCategoryFiles/FlavorsCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetQuote } from '../GetQuote';\r\nimport '../../styles/flavorsCategory.css';\r\nimport food1 from './food_1.avif';\r\nimport food2 from './food_2.avif';\r\nimport food3 from './food_3.avif';\r\n\r\n/**\r\n * FlavorsCategory Component\r\n *\r\n * This component represents the flavorsCategory page that dynamically retrieves\r\n * all different categories from the database. It also provides a random picture for each category.\r\n * \r\n */\r\n\r\nexport const FlavorsCategory = () => {\r\n\r\n  let categoryLink;\r\n\r\n  let foodImages = [food1, food2, food3];\r\n\r\n  /*Picks one of the three images I included in the files at random. May not match up with the right category but it's just a placeholder*/\r\n\r\n  function getRandomPicture() {\r\n    let index = Math.floor(Math.random() * foodImages.length);\r\n    return index;\r\n  }\r\n\r\n  const [categories, setCategories] = useState(null);\r\n\r\n  /**\r\n   * \r\n   * This useEffect hook makes a GET request to the backend at the path /flavors/Categories. It then sets the categoriesArray \r\n   * to be rendered by the component. Note: The web app only makes GET requests and the database will not be receiving anymore\r\n   * flavor or flavor category data. This is why this useEffect hook and others have an empty dependency array.\r\n   * \r\n   */\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/flavors/Categories');\r\n        if (response.ok) {\r\n          const categoriesArray = await response.json();\r\n          setCategories(categoriesArray);\r\n        } else {\r\n          console.log(`Failed to fetch categories. Status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n    /**\r\n * This useEffect hook scrolls the page to the top of the page when the component mounts. this ensures the user does not enter into a route with the page scrolled down.\r\n * \r\n *   Uses set timeout to prevent unexpected behavior    *  with the render ordering.\r\n */\r\n\r\n    useEffect(() => {\r\n      setTimeout(function() {\r\n        window.scrollTo(0, 0);\r\n      }, 150);\r\n      \r\n    }, []);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"displayCategoryContainer\">\r\n        <div className=\"flavorsCategory\">\r\n\r\n          {/*Dynamically render the categories and set the link to the corresponding flavors page*/}\r\n          \r\n          {categories &&\r\n            categories.map((category) => {\r\n              categoryLink = `/flavors/${category}`;\r\n              let containerStyle = {\r\n                backgroundImage: `url(${foodImages[getRandomPicture()]})`,\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center',\r\n                backgroundRepeat: 'no-repeat',\r\n              };\r\n              return (\r\n                <Link key={category} to={categoryLink}>\r\n                  <div className=\"categoryItem\" style={containerStyle}>\r\n                    <h3>{category}</h3>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"quoteBox\" id=\"categoryQuote\">\r\n          <GetQuote />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAO,kCAAkC;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,eAAe;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnC,IAAIC,YAAY;EAEhB,IAAIC,UAAU,GAAG,CAACV,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC;;EAEtC;;EAEA,SAASS,gBAAgBA,CAAA,EAAG;IAC1B,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,UAAU,CAACM,MAAM,CAAC;IACzD,OAAOJ,KAAK;EACd;EAEA,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAElD;AACF;AACA;AACA;AACA;AACA;AACA;;EAEED,SAAS,CAAC,MAAM;IACd,MAAMuB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;QAC5E,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,eAAe,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAC7CN,aAAa,CAACK,eAAe,CAAC;QAChC,CAAC,MAAM;UACLE,OAAO,CAACC,GAAG,CAAE,uCAAsCN,QAAQ,CAACO,MAAO,EAAC,CAAC;QACvE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB;IACF,CAAC;IACDT,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEJ;AACJ;AACA;AACA;AACA;;EAEIvB,SAAS,CAAC,MAAM;IACdiC,UAAU,CAAC,YAAW;MACpBC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC;EAET,CAAC,EAAE,EAAE,CAAC;EAGR,oBACE3B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,eACE5B,OAAA;MAAK6B,SAAS,EAAC,0BAA0B;MAAAD,QAAA,gBACvC5B,OAAA;QAAK6B,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAI7Bf,UAAU,IACTA,UAAU,CAACiB,GAAG,CAAEC,QAAQ,IAAK;UAC3B1B,YAAY,GAAI,YAAW0B,QAAS,EAAC;UACrC,IAAIC,cAAc,GAAG;YACnBC,eAAe,EAAG,OAAM3B,UAAU,CAACC,gBAAgB,CAAC,CAAC,CAAE,GAAE;YACzD2B,cAAc,EAAE,OAAO;YACvBC,kBAAkB,EAAE,QAAQ;YAC5BC,gBAAgB,EAAE;UACpB,CAAC;UACD,oBACEpC,OAAA,CAACN,IAAI;YAAgB2C,EAAE,EAAEhC,YAAa;YAAAuB,QAAA,eACpC5B,OAAA;cAAK6B,SAAS,EAAC,cAAc;cAACS,KAAK,EAAEN,cAAe;cAAAJ,QAAA,eAClD5B,OAAA;gBAAA4B,QAAA,EAAKG;cAAQ;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC,GAHGX,QAAQ;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIb,CAAC;QAEX,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN1C,OAAA;QAAK6B,SAAS,EAAC,UAAU;QAACc,EAAE,EAAC,eAAe;QAAAf,QAAA,eAC1C5B,OAAA,CAACL,QAAQ;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACtC,EAAA,CArFWD,eAAe;AAAAyC,EAAA,GAAfzC,eAAe;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}