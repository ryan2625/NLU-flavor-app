[{"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\index.js":"1","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\App.js":"2","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\navbarFiles\\Navigation.jsx":"3","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Flavors.jsx":"4","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Home\\Home.jsx":"5","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\footerFiles\\Footer.jsx":"6","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\flavorCategoryFiles\\FlavorsCategory.jsx":"7","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\GetQuote.jsx":"8","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Home\\Contact.jsx":"9","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Home\\HomeCarousel.jsx":"10"},{"size":436,"mtime":1696694385980,"results":"11","hashOfConfig":"12"},{"size":1898,"mtime":1696692951232,"results":"13","hashOfConfig":"12"},{"size":6508,"mtime":1696690883267,"results":"14","hashOfConfig":"12"},{"size":2238,"mtime":1696542772279,"results":"15","hashOfConfig":"12"},{"size":2683,"mtime":1696504507386,"results":"16","hashOfConfig":"12"},{"size":1849,"mtime":1696690990695,"results":"17","hashOfConfig":"12"},{"size":3336,"mtime":1696700911069,"results":"18","hashOfConfig":"12"},{"size":4357,"mtime":1696700908923,"results":"19","hashOfConfig":"12"},{"size":2284,"mtime":1696141250313,"results":"20","hashOfConfig":"12"},{"size":1794,"mtime":1696690294177,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"12671dn",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\index.js",[],[],["55"],"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\App.js",[],[],"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\navbarFiles\\Navigation.jsx",["56","57"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport logo from './logo.png';\r\nimport './../../styles/navbar.css';\r\n\r\n/**\r\n * Navigation Component\r\n *\r\n * This component represents the navigation bar and manages the mobile menu's status.\r\n * It can communicate with App.js to inform whether the mobile menu is open or closed.\r\n * It also fetches the categories from the backend and renders them in the navigation bar\r\n * dropdown and mobile menu dropdown. This component could be optimized and refactored\r\n * futher.\r\n * \r\n */\r\nexport const Navigation = ({ status, setStatus }) => {\r\n  \r\n  /*Defining a variable to hold the href in the nav drop down menu*/\r\n\r\n  let link;\r\n\r\n  /* \r\n  *This function sets the status state, which determines whether the mobile menu is open or closed.\r\n  */\r\n\r\n  function handleBurgerClick() {\r\n    setStatus(!status);\r\n  }\r\n\r\n  /**\r\n   * This use effect fetches all the categories from the backend and saves them in the categories state,\r\n   * then dynamically renders them in the drop down menu.\r\n   */\r\n\r\n  const [categories, setCategories] = useState(null);\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/flavors/Categories');\r\n        if (response.ok) {\r\n          const categoriesArray = await response.json();\r\n          setCategories(categoriesArray);\r\n        } else {\r\n          console.log(`Failed to fetch categories. Status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  return ( \r\n    /*Desktop navbar*/\r\n    <div className=\"browserMobileNav\">\r\n      <div className=\"navContainer\">\r\n        <Link className='logoLink' to=\"/\">\r\n          <img src={logo} alt=\"Company Logo\" />\r\n        </Link>\r\n        <nav>\r\n          <ul>\r\n            <li className=\"hoverLink\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <NavDropdown title=\"Capabilities\">\r\n\r\n              {/*We could set the path for these, but the pages don't actually exist.*/}\r\n\r\n                <NavDropdown.Item>Design</NavDropdown.Item>\r\n                <NavDropdown.Item>Production</NavDropdown.Item>\r\n                <NavDropdown.Item>Certification</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </li>\r\n            <li>\r\n              <NavDropdown title=\"Flavors\">\r\n\r\n              {/*Here we dynamically render the flavor categories, and set each category with its respective link*/}\r\n\r\n                <NavDropdown.Item href=\"/categories\">All Categories</NavDropdown.Item>\r\n                {categories &&\r\n                  categories.map(\r\n                    (category) => (\r\n                      (link = `/flavors/${category}`),\r\n                      (\r\n                        <NavDropdown.Item href={link} key={category}>\r\n                          {category}\r\n                        </NavDropdown.Item>\r\n                      )\r\n                    )\r\n                  )}\r\n              </NavDropdown>\r\n            </li>\r\n            <li className=\"hoverLink\">\r\n              <Link to=\"/\">About us</Link>\r\n            </li>\r\n            <li className=\"hoverLink\">\r\n\r\n            {/*This link saves the search params. This is used to automatically scroll to the contact component on the home page. See: Home page*/}\r\n\r\n              <Link to={{ pathname: '/', search: '?source=contact' }}>Contact Us</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Mobile navbar version... */}\r\n\r\n      <div className=\"mobileContainer\">\r\n        <Link className='logoLink' to=\"/\">\r\n          <img src={logo} alt=\"Company Logo\" />\r\n        </Link>\r\n        <div className=\"menuStatus\">\r\n          <div\r\n            className={status ? 'burgerIcon closed' : 'burgerIcon open'}\r\n            onClick={handleBurgerClick}\r\n          >\r\n            <MenuIcon />\r\n          </div>\r\n          <div\r\n            className={status ? 'burgerIcon open' : 'burgerIcon closed'}\r\n            onClick={handleBurgerClick}\r\n          >\r\n            <CloseIcon />\r\n          </div>\r\n          <div className={status ? 'openMenu' : 'closed'}>\r\n            <nav>\r\n              <ul className=\"mobileNavUl\">\r\n                <li>\r\n                  <Link to=\"/\" onClick={handleBurgerClick}>\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                <div className=\"dropCapabilities\">\r\n                  <NavDropdown title=\"Capabilities\">\r\n                    <NavDropdown.Item>Design</NavDropdown.Item>\r\n                    <NavDropdown.Item>Production</NavDropdown.Item>\r\n                    <NavDropdown.Item>Certification</NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </div>\r\n                </li>\r\n                <li>\r\n                <div className=\"dropCategory\">\r\n                  <NavDropdown title=\"Flavors\" >\r\n                    <NavDropdown.Item href=\"/categories\" >All Categories</NavDropdown.Item>\r\n                    {categories &&\r\n                      categories.map(\r\n                        (category) => (\r\n                          (link = `/flavors/${category}`),\r\n                          (\r\n                            <NavDropdown.Item\r\n                              href={link}\r\n                              key={category}\r\n                              onClick={handleBurgerClick}\r\n                            >\r\n                              {category}\r\n                            </NavDropdown.Item>\r\n                          )\r\n                        )\r\n                      )}\r\n                    </NavDropdown>\r\n                </div>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\" onClick={handleBurgerClick}>\r\n                    About us\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n\r\n                  <Link\r\n                    to={{ pathname: '/', search: '?source=contact' }}\r\n                    onClick={handleBurgerClick}\r\n                  >\r\n                    Contact Us\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Flavors.jsx",["58"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { GetQuote } from './GetQuote';\r\nimport '../styles/flavors.css';\r\n\r\n/**\r\n * Flavors Component\r\n *\r\n * This component dynamically renders different flavors associated with a specific category path. It makes a GET\r\n * request to the backend at the path /flavors/:category. It then renders the flavors associated with that category.\r\n * \r\n */\r\n\r\nexport const Flavors = () => {\r\n\r\n  const { category } = useParams();\r\n  const [flavors, setFlavors] = useState(null);\r\n\r\n  /** \r\n   *  \r\n   *  This useEffect hook makes a GET request to the backend at the path /flavors/:category. It then renders the flavors\r\n   *  associated with that category.\r\n   * \r\n  */\r\n\r\n  useEffect(() => {\r\n    const fetchCategoryFlavor = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4000/api/flavors/${category}`);\r\n        if (response.ok) {\r\n          const flavorArray = await response.json();\r\n          setFlavors(flavorArray);\r\n        } else {\r\n          console.log(`Failed to fetch categories. Status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchCategoryFlavor();\r\n  }, [] );\r\n\r\n  /**\r\n * This useEffect hook scrolls the page to the top of the page when the component mounts. this ensures the user does\r\n * not enter into a path with the page scrolled down.\r\n * Uses set timeout to prevent unexpected behavior with\r\n * the render ordering.\r\n */\r\n\r\n  useEffect(() => {\r\n    setTimeout(function() {\r\n      window.scrollTo(0, 0);\r\n    }, 150);\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"categoryContainer\">\r\n        <div className=\"categoryFlavors\">\r\n          <h1 className=\"categoryHeader\">All {category} Flavors</h1>\r\n          {flavors &&\r\n            flavors.map((flavor, index) => (\r\n              <div className=\"individualFlavors\" key={index}>\r\n                <ul>\r\n                  <li>{flavor.flavorName}</li>\r\n                </ul>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"quoteBox\" id=\"flavorQuote\">\r\n          <GetQuote />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Home\\Home.jsx",[],[],"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\footerFiles\\Footer.jsx",[],[],"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\flavorCategoryFiles\\FlavorsCategory.jsx",[],[],"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\GetQuote.jsx",[],[],"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Home\\Contact.jsx",[],[],"C:\\Users\\ryanc\\reactProjects\\personalProjects\\NLU FLAVOR APP\\flavor-app\\frontEnd\\src\\components\\Home\\HomeCarousel.jsx",[],[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":88,"column":54,"nodeType":"63","messageId":"64","endLine":88,"endColumn":55},{"ruleId":"61","severity":1,"message":"62","line":154,"column":58,"nodeType":"63","messageId":"64","endLine":154,"endColumn":59},{"ruleId":"65","severity":1,"message":"66","line":42,"column":6,"nodeType":"67","endLine":42,"endColumn":8,"suggestions":"68"},"no-new-object",["69"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-object-constructor",{"desc":"71","fix":"72"},"Update the dependencies array to be: [category]",{"range":"73","text":"74"},[1267,1269],"[category]"]